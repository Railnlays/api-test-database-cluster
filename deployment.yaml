apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-test-database-cluster
  namespace: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-test-database-cluster
  template:
    metadata:
      labels:
        app: api-test-database-cluster
    spec:
      containers:
        - name: api-test-database-cluster
          image: railnlays/api-test-database-cluster:latest
          ports:
            - containerPort: 5000
          env:
            - name: WORKERS
              value: "1"
            - name: DB_HOST
              value: "your-database-host"
            - name: DB_PORT
              value: "your-database-port"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
            - name: DB_NAME
              value: "your-database-name"
          imagePullPolicy: Always
          resources:
            requests:
              memory: "100Mi"
              cpu: "50m"
            limits:
              memory: "100Mi"
              cpu: "200m"
          readinessProbe:
            httpGet:
              path: /healthzReadiness
              port: 5000
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /healthzLiveness
              port: 5000
            periodSeconds: 30
          startupProbe:
            httpGet:
              path: /healthzStartup
              port: 5000
            failureThreshold: 10
            periodSeconds: 5

        - name: postgres
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
            - name: POSTGRES_DB
              value: "your-database-name"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudbeaver
  namespace: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudbeaver
  template:
    metadata:
      labels:
        app: cloudbeaver
    spec:
      containers:
        - name: cloudbeaver
          image: dbeaver/cloudbeaver:latest
          ports:
            - containerPort: 8080
          env:
            - name: CB_JDBC_DRIVER_POSTGRESQL
              value: "org.postgresql.Driver"
            - name: CB_JDBC_URL
              value: "jdbc:postgresql://postgres-service:5432/your-database-name"
            - name: CB_JDBC_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: username
            - name: CB_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: api
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---
apiVersion: v1
kind: Service
metadata:
  name: cloudbeaver-service
  namespace: api
spec:
  type: LoadBalancer  
  selector:
    app: cloudbeaver
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
  namespace: api
type: Opaque
data:
  username: Y2JhZG1pbg==
  password: RWtAOTU4NDAyNTI3
